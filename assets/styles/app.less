@import url('https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&display=swap');
@import url('https://cdn-uicons.flaticon.com/3.0.0/uicons-regular-rounded/css/uicons-regular-rounded.css');

:root {
    --bg-color: #FFFFFF;
    --muted-color: #FAFAFA;
    --text-color: #1E293B;
    --gold-color: #FACC15;
    --gold-dark-color: #eab208;
    --gold-muted-color: #FEF9C3;
    --placeholder-color: #8E8E8E;

    --box-shadow: 0 0 7px rgba( 0, 0, 0, .5 );

    --main-font-size: 16px;
    --main-font-weight: 400;

    --default-padding: 10px;
    --default-gap: 10px;

    --default-radius: 10px;
}

* { box-sizing: border-box; outline: none; }

html, body {
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    overflow: auto;

    /* Striped background */
    .striped {
        background-image: repeating-linear-gradient(45deg, #e2e2e2, #e2e2e2 5px, transparent 5px, transparent 15px);
    }

    /* Container */
    #container {
        .d_flex( column, flex-start, flex-start, 0, none );
        .font( "Lora", sans-serif, var( --main-font-size), var( --main-font-weight), var( --text-color ) );

        background: var( --bg-color );

        width: 100%;
        height: 100%;

        /* Header */
        header {
            .d_flex( row, center, center, 0, none );

            .toRem( height, 50px );
            .toRem( min-height, 50px );
            .toRem( padding, 0 calc( var( --default-padding ) / 2 ) );

            background: var( --bg-color );
            box-shadow: var( --box-shadow );

            width: 100%;
            position: fixed;
            top: 0;
            z-index: 999;

            .header-logo {
                .d_flex( row, center, center, 0, none );

                .toRem( min-width, 50px );
                .toRem( width, 50px );

                height: 100%;

                img {
                    height: 100%;
                    width: 100%;
                    object-fit: cover;
                }

            }

            nav.header-navbar-responsive {
                .d_flex( row, center, flex-end, calc( var( --default-gap ) / 2 ), none );

                height: 100%;
                width: 100%;

                button {
                    .ico( 40px, 40px, 20px, 5px, var( --gold-dark-color ) );

                    .toRem( border-radius, var( --default-radius ) );

                    background: transparent;
                    border: 0;
                    cursor: pointer;

                    &.btnSearch {
                        background: var( --gold-muted-color );  
                    }
                }
            }

            nav.header-navbar {
                .toRem( top, 50px );
                .toRem( padding, var( --default-padding ) );

                background: var( --bg-color );

                position: fixed;
                width: 100%;
                height: 100%;
                left: 0; right: 0; bottom: 0;
                display: none;

                &.activeResponsiveNavar {
                    .d_flex( column, flex-start, flex-start, var( --default-gap ), none );

                    button { display: none; }
                }

                a.link {
                    .font( "Lora", sans-serif, 20px, 400, var( --gold-dark-color ) );
                    .d_flex( row, center, center, 0, none );

                    .toRem( height, 60px );

                    width: 100%;
                    border: 0;
                    cursor: pointer;
                    text-decoration: none;
                    position: relative;

                    &:hover::before {
                        background: var( --gold-muted-color );
                    }

                    &::before {
                        .toRem( border-radius, var( --default-radius ) );

                        opacity: .2;
                        position: absolute;
                        content: "";
                        width: 100%;
                        height: 100%;
                        transition: all .3s;
                    }

                    &.active {
                        font-weight: 700;

                        &::before {
                            background: var( --gold-color );
                            
                            opacity: .3;
                        }
                    }
                }
            }

            #searchBox {
                .toRem( padding, var( --default-padding ) );

                position: fixed;
                top: 0; left: 0; right: 0; bottom: 0;
                width: 100%;
                height: 100%;
                display: none;

                &.showModule {
                    .d_flex( row, center, center, 0, none );
                }

                .background {
                    position: fixed;
                    top: 0; left: 0; right: 0; bottom: 0;
                    background: rgba( 0, 0, 0, .5 );
                    backdrop-filter: blur(10px);
                    width: 100%;
                    height: 100%;
                }

                .input-box {
                    .d_flex( row, center, center, 0, none );

                    .toRem( height, 60px );
                    .toRem( border-radius, var( --default-radius ) );

                    box-shadow: var( --box-shadow );
                    background: var( --bg-color );

                    width: 100%;
                    position: relative;
                    z-index: 1000;

                    .ico {
                        .ico( 60px, 60px, 20px, 5px, var( --placeholder-color ) );
                    }

                    input {
                        .font( "Lora", sans-serif, 20px, 700, var( --text-color ) );

                        width: 100%;
                        height: 100%;
                        background: transparent;
                        border: 0;

                        &::placeholder { color: var( --placeholder-color ); }
                    }
                }
            }

            @media (min-width: 830px){
                
                .toRem( height, 120px );
                .toRem( min-height, 120px );
                .toRem( padding, 0 var( --default-padding ) );

                .header-logo {
                    .toRem( width, 100px );
                }

                nav.header-navbar-responsive { display: none; }

                nav.header-navbar,
                nav.header-navbar.activeResponsiveNavar {
                    .d_flex( row, center, flex-end, var( --default-gap ), none );

                    position: relative;
                    top: auto; left: auto; right: auto; bottom: auto;
                    width: 100%;

                    a.link {
                        .toRem( width, 150px );
                    }

                    button {
                        .ico( 60px, 60px, 30px, 7px, var( --gold-muted-color ) );

                        .toRem( border-radius, var( --default-radius ) );

                        background: var( --gold-color );
                        border: 0;
                        cursor: pointer;
                    }
                }

                #searchBox {
                    .input-box {
                        .toRem( width, 600px );
                    }
                }

            }

        }

        /* Main */
        main {
            .d_flex( column, flex-start, flex-start, 0, none );

            .toRem( margin-top, 50px );

            width: 100%;
            height: auto;

            /* Banner */
            .banner {
                width: 100%;
                height: calc( 100vh - 50px );
                min-height: calc( 100vh - 50px );
            
                @media (min-width: 830px){
                    height: calc( 100vh - 120px );
                    min-height: calc( 100vh - 120px );
                }
            } 

            /* About */
            .about {
                .d_flex( column, center, flex-start, calc( var( --default-gap ) * 2 ), none );

                .toRem( padding, calc( var( --default-padding ) * 4 ) var( --default-padding ) );

                width: 100%;
                height: auto;

                .about-avatar {
                    .toRem( width, 100px );
                    .toRem( height, 100px );

                    border-radius: 100%;
                }

                .about-text {
                    .font( "Lora", sans-serif, 16px, 600, var( --text-color ) );

                    width: 100%;
                    text-align: center;
                }

                a.about-button {
                    .d_flex( row, center, center, 0, none );
                    .font( "Lora", sans-serif, 20px, 700, var( --gold-muted-color ) );

                    .toRem( width, 200px );
                    .toRem( height, 50px );
                    .toRem( border-radius, var( --default-radius ) );

                    background: var( --gold-color );

                    border: 0;
                    cursor: pointer;
                    text-decoration: none;
                }

                @media (min-width: 830px){
                    .about-avatar {
                        .toRem( width, 200px );
                        .toRem( height, 200px );
                    }

                    .about-text {
                        .toRem( width, 670px );
                    }

                    a.about-button {
                        .toRem( width, 200px );
                    }
                }
            }

            /* Last articles */
            .last-articles {
                .d_flex( column, center, flex-start, calc( var( --default-gap ) * 2 ), none );

                .toRem( padding, calc( var( --default-padding ) * 4 ) var( --default-padding ) );

                width: 100%;
                height: auto;

                .title {
                    .font( "Lora", sans-serif, 25px, 700, var( --text-color ) );

                    width: 100%;
                    text-align: center;
                }

                .articles-list {
                    .toRem( gap, calc( var( --default-gap ) * 2 ) );
                    display: grid;
                    grid-template-columns: 1fr;
                    width: 100%;

                    a.article {
                        .toRem( border-radius, var( --default-radius ) );
                        .toRem( height, 200px );
                        .toRem( min-height, 200px );

                        background: var( --muted-color );

                        width: 100%;
                        position: relative;
                        text-decoration: none;

                        .article-cover {
                            .toRem( border-radius, var( --default-radius ) );

                            width: 100%;
                            height: 100%;
                        }

                        .article-content {
                            .d_flex( column, center, center, var( --default-gap ), none );
                            .font( "Lora", sans-serif, auto, auto, auto );

                            .toRem( border-radius, var( --default-radius ) );
                            .toRem( padding, var( --default-padding ) );

                            background: rgba( 0, 0, 0, .5 );
                            position: absolute;
                            top: 0; left: 0; right: 0; bottom: 0;

                            .article-title {
                                .toRem( font-size, 25px );

                                color: var( --bg-color );
                                text-shadow: var( --box-shadow );

                                font-weight: 700;
                            }

                            .article-keywords {
                                .toRem( font-size, 13px );

                                color: var( --bg-color );
                                text-shadow: var( --box-shadow );

                                font-weight: 700;
                            }

                            .article-date {
                                .toRem( font-size, 13px );

                                color: var( --bg-color );
                                text-shadow: var( --box-shadow );

                                font-weight: 500;
                            }

                            .article-description,
                            .article-button { display: none; }
                        }
                    }

                    @media (min-width: 830px){
                        grid-template-columns: repeat( auto-fill, minmax(350px, 1fr) );

                        a.article {
                            .toRem( padding, var( --default-padding ) );
                            .toRem( height, 520px );
                            .toRem( min-height, 520px );

                            .article-cover {
                                .toRem( height, 200px );
                                .toRem( min-height, 200px );
                            }

                            .article-content {

                                position: relative;
                                top: auto; left: auto; right: auto; bottom: auto;
                                background: transparent;

                                .article-title,
                                .article-keywords,
                                .article-date { color: var( --text-color ); text-shadow: none; }

                                .article-description {
                                    .toRem( font-size, 16px );

                                    color: var( --text-color );

                                    font-weight: 400;
                                    text-align: center;
                                    width: 100%;
                                    display: block;
                                }

                                .article-button {
                                    .d_flex( row, center, center, 0, none );

                                    .toRem( border-radius, var( --default-radius ) );
                                    .toRem( width, 150px );
                                    .toRem( min-height, 50px );
                                    .toRem( height, 50px );

                                    background: var( --gold-muted-color );
                                    color: var( --gold-dark-color );
                                }
                            }
                        }
                    }

                }

                a.view-all {
                    .font( "Lora", sans-serif, 20px, 700, var( --gold-muted-color ) );
                    .d_flex( row, center, center, 0, none );

                    .toRem( border-radius, var( --default-radius ) );
                    .toRem( width, 200px );
                    .toRem( height, 50px );

                    background: var( --gold-color );

                    text-decoration: none;

                    @media (min-width: 830px){
                        .toRem( width, 150px );
                    }
                }
            }

            @media (min-width: 830px){
                .toRem( margin-top, 120px );
            }
        }

        /* Footer */
        footer {
            .d_flex( row, center, center, 0, none );
            .font( "Lora", sans-serif, 12px, 700, var( --text-color ) );

            .toRem( height, 50px );
            .toRem( min-height, 50px );
            
            background: var( --bg-color );
            box-shadow: var( --box-shadow );

            width: 100%;

            @media (min-width: 830px){
                .toRem( font-size, 20px );
            }
        }

    }
}


/* Functions */

.d_flex( @flexDirection, @alignItems, @justifyContent, @gap, @flexWrap ){
    .toRem( gap, @gap );

    display: flex;

    align-items: @alignItems;
    justify-content: @justifyContent;
    flex-direction: @flexDirection;
    flex-wrap: @flexWrap;
}

.font( @fontName, @fontType, @fontSize, @fontWeight, @fontColor ){
    .toRem( font-size, @fontSize );

    font-family: @fontName, @fontType;
    font-weight: @fontWeight;
    color: @fontColor;
}

.ico( @width, @height, @fontSize, @marginTop, @color ){
    .d_flex( row, center, center, 0, none );
    
    .toRem( width, @width );
    .toRem( min-width, @width );
    .toRem( height, @height );
    .toRem( min-height, @height );

    i {
        .toRem( font-size, @fontSize );
        .toRem( margin-top, @marginTop );

        color: @color;

        display: block;
    }
}

.toRem( @property, @list, @base: 16px ){
    @n: length(@list);

    // Only convert numbers that are not percentages or 0;
    ._merge( @px ) when ( isnumber(@px) ) and not ( ispercentage(@px) ) and not ( @px = 0 ) {
        @rem: ( @px / @base );
        @{property}+_: unit(@rem, rem);
    }
    ._merge( @px ) when ( default() ) {
        @{property}+_: @px;
    }

    ._loop( @n ) when ( @n > 0 ) {
        ._loop((@n - 1));

        @val: extract(@list, @n);
        ._merge( @val ); // merges values onto @property with space character.
    }

    ._loop( @n );
}